rh

# --------------
# Please enter the commit message for your changes. Everything below
# this paragraph is ignored, and an empty message aborts the commit.
# Just close the window to accept your message.
diff --git a/exemplo_2/calculadora/__init__.pyc b/exemplo_2/calculadora/__init__.pyc
index f214556..cfba837 100644
Binary files a/exemplo_2/calculadora/__init__.pyc and b/exemplo_2/calculadora/__init__.pyc differ
diff --git a/exemplo_2/calculadora/admin.pyc b/exemplo_2/calculadora/admin.pyc
index 735f95b..248096d 100644
Binary files a/exemplo_2/calculadora/admin.pyc and b/exemplo_2/calculadora/admin.pyc differ
diff --git a/exemplo_2/calculadora/forms.pyc b/exemplo_2/calculadora/forms.pyc
index 6fe18e6..8bd6869 100644
Binary files a/exemplo_2/calculadora/forms.pyc and b/exemplo_2/calculadora/forms.pyc differ
diff --git a/exemplo_2/calculadora/migrations/0001_initial.pyc b/exemplo_2/calculadora/migrations/0001_initial.pyc
index 79dcc55..51f9103 100644
Binary files a/exemplo_2/calculadora/migrations/0001_initial.pyc and b/exemplo_2/calculadora/migrations/0001_initial.pyc differ
diff --git a/exemplo_2/calculadora/migrations/0002_auto_20170131_1159.pyc b/exemplo_2/calculadora/migrations/0002_auto_20170131_1159.pyc
index 3d739bd..ce6e709 100644
Binary files a/exemplo_2/calculadora/migrations/0002_auto_20170131_1159.pyc and b/exemplo_2/calculadora/migrations/0002_auto_20170131_1159.pyc differ
diff --git a/exemplo_2/calculadora/migrations/0003_auto_20170131_1303.py b/exemplo_2/calculadora/migrations/0003_auto_20170131_1303.py
new file mode 100644
index 0000000..e03a9ae
--- /dev/null
+++ b/exemplo_2/calculadora/migrations/0003_auto_20170131_1303.py
@@ -0,0 +1,18 @@
+# -*- coding: utf-8 -*-
+from __future__ import unicode_literals
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('calculadora', '0002_auto_20170131_1159'),
+    ]
+
+    operations = [
+        migrations.AlterModelOptions(
+            name='logsoma',
+            options={'verbose_name': 'Log de Soma'},
+        ),
+    ]
diff --git a/exemplo_2/calculadora/migrations/0003_auto_20170131_1303.pyc b/exemplo_2/calculadora/migrations/0003_auto_20170131_1303.pyc
new file mode 100644
index 0000000..d9acef0
Binary files /dev/null and b/exemplo_2/calculadora/migrations/0003_auto_20170131_1303.pyc differ
diff --git a/exemplo_2/calculadora/migrations/__init__.pyc b/exemplo_2/calculadora/migrations/__init__.pyc
index f7b42de..3b0f944 100644
Binary files a/exemplo_2/calculadora/migrations/__init__.pyc and b/exemplo_2/calculadora/migrations/__init__.pyc differ
diff --git a/exemplo_2/calculadora/models.pyc b/exemplo_2/calculadora/models.pyc
index 5bf1738..2ac03d5 100644
Binary files a/exemplo_2/calculadora/models.pyc and b/exemplo_2/calculadora/models.pyc differ
diff --git a/exemplo_2/calculadora/urls.pyc b/exemplo_2/calculadora/urls.pyc
index 6504d3b..342e5a5 100644
Binary files a/exemplo_2/calculadora/urls.pyc and b/exemplo_2/calculadora/urls.pyc differ
diff --git a/exemplo_2/calculadora/views.py b/exemplo_2/calculadora/views.py
index df6ad43..a978e5c 100644
--- a/exemplo_2/calculadora/views.py
+++ b/exemplo_2/calculadora/views.py
@@ -1,5 +1,6 @@
 from django.shortcuts import render
 from .forms import SomaForm
+from .models import LogSoma
 # Create your views here.
 
 
@@ -10,6 +11,7 @@ def home(request, **kwargs):
     form = SomaForm(request.POST or {'num_1': 0, 'num_2': 0})
 
     context['form'] = form
+    context['logs'] = LogSoma.objects.all()
 
     if form.is_valid():
         context['soma'] = form.soma()
diff --git a/exemplo_2/calculadora/views.pyc b/exemplo_2/calculadora/views.pyc
index f47d647..4f20f68 100644
Binary files a/exemplo_2/calculadora/views.pyc and b/exemplo_2/calculadora/views.pyc differ
diff --git a/exemplo_2/db.sqlite3 b/exemplo_2/db.sqlite3
index 357f465..ec65bfd 100644
Binary files a/exemplo_2/db.sqlite3 and b/exemplo_2/db.sqlite3 differ
diff --git a/exemplo_2/exemplo_2/__init__.pyc b/exemplo_2/exemplo_2/__init__.pyc
index 3d0cb95..86e59df 100644
Binary files a/exemplo_2/exemplo_2/__init__.pyc and b/exemplo_2/exemplo_2/__init__.pyc differ
diff --git a/exemplo_2/exemplo_2/settings.pyc b/exemplo_2/exemplo_2/settings.pyc
index f793f2f..4c23afc 100644
Binary files a/exemplo_2/exemplo_2/settings.pyc and b/exemplo_2/exemplo_2/settings.pyc differ
diff --git a/exemplo_2/exemplo_2/urls.pyc b/exemplo_2/exemplo_2/urls.pyc
index 9683f09..5510d2a 100644
Binary files a/exemplo_2/exemplo_2/urls.pyc and b/exemplo_2/exemplo_2/urls.pyc differ
diff --git a/exemplo_2/exemplo_2/wsgi.pyc b/exemplo_2/exemplo_2/wsgi.pyc
index 363b41b..8429d4c 100644
Binary files a/exemplo_2/exemplo_2/wsgi.pyc and b/exemplo_2/exemplo_2/wsgi.pyc differ
diff --git a/exemplo_2/templates/home.html b/exemplo_2/templates/home.html
index b8988da..c838f01 100644
--- a/exemplo_2/templates/home.html
+++ b/exemplo_2/templates/home.html
@@ -2,29 +2,33 @@
 <html>
 <head>
    <title>Calculadora</title>
+   <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/skeleton/2.0.4/skeleton.min.css" />
 </head>
-<body>
+<body style="font-family: sans-serif;">
    {% if soma %}
        {{ soma }}
    {% endif %}
    <form method="POST">
        {% csrf_token %}
-       <label>
-           {{ form.nome.label }}<br>
-           {{ form.nome }}<br>
-           {{ form.nome.errors }}
-       </label><br><br>
-
-       <label>
-           {{ form.num_1.label }}<br>
-           {{ form.num_1 }}
-       </label><br><br>
-
-       <label>
-           {{ form.num_2.label }}<br>
-           {{ form.num_2 }}
-       </label>
+       {{ form }}
        <input type="submit" value="Somar">
    </form>
+
+   <table>
+       <tr>
+           <th>Nome</th>
+           <th>Número 2</th>
+           <th>Número 2</th>
+           <th>Data/Hora</th>
+       </tr>
+       {% for log in logs %}
+           <tr>
+               <td>{{ log.nome }}</td>
+               <td>{{ log.num_1 }}</td>
+               <td>{{ log.num_2 }}</td>
+               <td>{{ log.datahora }}</td>
+           </tr>
+       {% endfor %}
+   </table>
 </body>
 </html>
\ No newline at end of file
diff --git a/rh/curriculo/__init__.py b/rh/curriculo/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/rh/curriculo/__init__.pyc b/rh/curriculo/__init__.pyc
new file mode 100644
index 0000000..530aabd
Binary files /dev/null and b/rh/curriculo/__init__.pyc differ
diff --git a/rh/curriculo/admin.py b/rh/curriculo/admin.py
new file mode 100644
index 0000000..35ac604
--- /dev/null
+++ b/rh/curriculo/admin.py
@@ -0,0 +1,20 @@
+from django.contrib import admin
+from .models import Aluno, Curriculo
+# Register your models here.
+
+class CurriculoAdmin(admin.ModelAdmin):
+    pass
+
+
+class AlunoAdmin(admin.ModelAdmin):
+    fields=('nome',)
+    readonly_fields = ('datacadastro',)
+
+    #def datacadastro(self, obj):
+    #    return obj.datacadastro
+
+    #datacadastro.empty_value_display = '???'
+
+
+admin.site.register(Aluno, AlunoAdmin)
+admin.site.register(Curriculo, CurriculoAdmin)
\ No newline at end of file
diff --git a/rh/curriculo/admin.pyc b/rh/curriculo/admin.pyc
new file mode 100644
index 0000000..3df56d8
Binary files /dev/null and b/rh/curriculo/admin.pyc differ
diff --git a/rh/curriculo/migrations/0001_initial.py b/rh/curriculo/migrations/0001_initial.py
new file mode 100644
index 0000000..c2140fa
--- /dev/null
+++ b/rh/curriculo/migrations/0001_initial.py
@@ -0,0 +1,30 @@
+# -*- coding: utf-8 -*-
+from __future__ import unicode_literals
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='Aluno',
+            fields=[
+                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
+                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
+                ('datacadastro', models.DateTimeField(auto_now_add=True)),
+            ],
+        ),
+        migrations.CreateModel(
+            name='Curriculo',
+            fields=[
+                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
+                ('arquivo', models.FileField(upload_to=b'media/')),
+                ('datacadastro', models.DateTimeField(auto_now_add=True)),
+                ('aluno', models.ForeignKey(to='curriculo.Aluno', unique=True)),
+            ],
+        ),
+    ]
diff --git a/rh/curriculo/migrations/0001_initial.pyc b/rh/curriculo/migrations/0001_initial.pyc
new file mode 100644
index 0000000..5460c89
Binary files /dev/null and b/rh/curriculo/migrations/0001_initial.pyc differ
diff --git a/rh/curriculo/migrations/__init__.py b/rh/curriculo/migrations/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/rh/curriculo/migrations/__init__.pyc b/rh/curriculo/migrations/__init__.pyc
new file mode 100644
index 0000000..ce62ccb
Binary files /dev/null and b/rh/curriculo/migrations/__init__.pyc differ
diff --git a/rh/curriculo/models.py b/rh/curriculo/models.py
new file mode 100644
index 0000000..a82bd5d
--- /dev/null
+++ b/rh/curriculo/models.py
@@ -0,0 +1,21 @@
+from django.db import models
+
+# Create your models here.
+
+class Aluno(models.Model):
+    nome = models.CharField(u'Nome', max_length=100)
+    datacadastro = models.DateTimeField(auto_now_add=True)
+
+    def __unicode__(self):
+        return 'Aluno: %s' % self.nome
+
+
+class Curriculo(models.Model):
+    arquivo = models.FileField()
+    datacadastro = models.DateTimeField(auto_now_add=True)
+    aluno = models.ForeignKey(Aluno, unique=True)
+
+    def __unicode__(self):
+        return 'Curriculo: %s' % self.id
+
+
diff --git a/rh/curriculo/models.pyc b/rh/curriculo/models.pyc
new file mode 100644
index 0000000..1514990
Binary files /dev/null and b/rh/curriculo/models.pyc differ
diff --git a/rh/curriculo/tests.py b/rh/curriculo/tests.py
new file mode 100644
index 0000000..7ce503c
--- /dev/null
+++ b/rh/curriculo/tests.py
@@ -0,0 +1,3 @@
+from django.test import TestCase
+
+# Create your tests here.
diff --git a/rh/curriculo/views.py b/rh/curriculo/views.py
new file mode 100644
index 0000000..3bf95ef
--- /dev/null
+++ b/rh/curriculo/views.py
@@ -0,0 +1,6 @@
+from django.shortcuts import render
+
+# Create your views here.
+
+def home(request, **kwargs):
+    return (request. 'home.html', {})
\ No newline at end of file
diff --git a/rh/db.sqlite3 b/rh/db.sqlite3
new file mode 100644
index 0000000..20114bb
Binary files /dev/null and b/rh/db.sqlite3 differ
diff --git a/rh/manage.py b/rh/manage.py
new file mode 100755
index 0000000..ecfcf4a
--- /dev/null
+++ b/rh/manage.py
@@ -0,0 +1,10 @@
+#!/usr/bin/env python
+import os
+import sys
+
+if __name__ == "__main__":
+    os.environ.setdefault("DJANGO_SETTINGS_MODULE", "rh.settings")
+
+    from django.core.management import execute_from_command_line
+
+    execute_from_command_line(sys.argv)
diff --git a/rh/media/Denis_Franco_de_Oliveira_1.pdf b/rh/media/Denis_Franco_de_Oliveira_1.pdf
new file mode 100644
index 0000000..8388baf
Binary files /dev/null and b/rh/media/Denis_Franco_de_Oliveira_1.pdf differ
diff --git a/rh/media/Denis_Franco_de_Oliveira_1_DscKDXZ.pdf b/rh/media/Denis_Franco_de_Oliveira_1_DscKDXZ.pdf
new file mode 100644
index 0000000..8388baf
Binary files /dev/null and b/rh/media/Denis_Franco_de_Oliveira_1_DscKDXZ.pdf differ
diff --git a/rh/media/media/Denis_Franco_de_Oliveira_1.pdf b/rh/media/media/Denis_Franco_de_Oliveira_1.pdf
new file mode 100644
index 0000000..8388baf
Binary files /dev/null and b/rh/media/media/Denis_Franco_de_Oliveira_1.pdf differ
diff --git a/rh/rh/__init__.py b/rh/rh/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/rh/rh/__init__.pyc b/rh/rh/__init__.pyc
new file mode 100644
index 0000000..6c8df9c
Binary files /dev/null and b/rh/rh/__init__.pyc differ
diff --git a/rh/rh/settings.py b/rh/rh/settings.py
new file mode 100644
index 0000000..4c15e75
--- /dev/null
+++ b/rh/rh/settings.py
@@ -0,0 +1,106 @@
+"""
+Django settings for rh project.
+
+Generated by 'django-admin startproject' using Django 1.8.17.
+
+For more information on this file, see
+https://docs.djangoproject.com/en/1.8/topics/settings/
+
+For the full list of settings and their values, see
+https://docs.djangoproject.com/en/1.8/ref/settings/
+"""
+
+# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
+import os
+
+BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
+
+
+# Quick-start development settings - unsuitable for production
+# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/
+
+# SECURITY WARNING: keep the secret key used in production secret!
+SECRET_KEY = 't!z=#qikn5m9#rpy)d($li@ic10c-_u&=3+bi93zjc$k9yaeqx'
+
+# SECURITY WARNING: don't run with debug turned on in production!
+DEBUG = True
+
+ALLOWED_HOSTS = []
+
+
+# Application definition
+
+INSTALLED_APPS = (
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+    'curriculo'
+)
+
+MIDDLEWARE_CLASSES = (
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.common.CommonMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+    'django.middleware.clickjacking.XFrameOptionsMiddleware',
+    'django.middleware.security.SecurityMiddleware',
+)
+
+ROOT_URLCONF = 'rh.urls'
+
+MEDIA_URL = '/media/'
+MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [os.path.join(BASE_DIR, 'templates')],
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.template.context_processors.debug',
+                'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
+
+WSGI_APPLICATION = 'rh.wsgi.application'
+
+
+# Database
+# https://docs.djangoproject.com/en/1.8/ref/settings/#databases
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
+    }
+}
+
+
+# Internationalization
+# https://docs.djangoproject.com/en/1.8/topics/i18n/
+
+LANGUAGE_CODE = 'en-us'
+
+TIME_ZONE = 'UTC'
+
+USE_I18N = True
+
+USE_L10N = True
+
+USE_TZ = True
+
+
+# Static files (CSS, JavaScript, Images)
+# https://docs.djangoproject.com/en/1.8/howto/static-files/
+
+STATIC_URL = '/static/'
diff --git a/rh/rh/settings.pyc b/rh/rh/settings.pyc
new file mode 100644
index 0000000..d8b1550
Binary files /dev/null and b/rh/rh/settings.pyc differ
diff --git a/rh/rh/urls.py b/rh/rh/urls.py
new file mode 100644
index 0000000..70ee307
--- /dev/null
+++ b/rh/rh/urls.py
@@ -0,0 +1,22 @@
+"""rh URL Configuration
+
+The `urlpatterns` list routes URLs to views. For more information please see:
+    https://docs.djangoproject.com/en/1.8/topics/http/urls/
+Examples:
+Function views
+    1. Add an import:  from my_app import views
+    2. Add a URL to urlpatterns:  url(r'^$', views.home, name='home')
+Class-based views
+    1. Add an import:  from other_app.views import Home
+    2. Add a URL to urlpatterns:  url(r'^$', Home.as_view(), name='home')
+Including another URLconf
+    1. Add a URL to urlpatterns:  url(r'^blog/', include('blog.urls'))
+"""
+from django.conf.urls import include, url
+from django.contrib import admin
+from django.conf.urls.static import static
+from django.conf import settings
+
+urlpatterns = [
+    url(r'^admin/', include(admin.site.urls)),
+] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
diff --git a/rh/rh/urls.pyc b/rh/rh/urls.pyc
new file mode 100644
index 0000000..601775e
Binary files /dev/null and b/rh/rh/urls.pyc differ
diff --git a/rh/rh/wsgi.py b/rh/rh/wsgi.py
new file mode 100644
index 0000000..0921369
--- /dev/null
+++ b/rh/rh/wsgi.py
@@ -0,0 +1,16 @@
+"""
+WSGI config for rh project.
+
+It exposes the WSGI callable as a module-level variable named ``application``.
+
+For more information on this file, see
+https://docs.djangoproject.com/en/1.8/howto/deployment/wsgi/
+"""
+
+import os
+
+from django.core.wsgi import get_wsgi_application
+
+os.environ.setdefault("DJANGO_SETTINGS_MODULE", "rh.settings")
+
+application = get_wsgi_application()
diff --git a/rh/rh/wsgi.pyc b/rh/rh/wsgi.pyc
new file mode 100644
index 0000000..be3ab8e
Binary files /dev/null and b/rh/rh/wsgi.pyc differ